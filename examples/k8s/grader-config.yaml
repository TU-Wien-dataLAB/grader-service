service:
  type: ClusterIP
  port: 4010
port: 4010
jupyterhub:
  apiUrl: http://proxy-public/hub/api
  baseUrl: /


#db:
#  dialect: postgresql
#  url: "postgresql://grader-service:Starfish@grader-db-postgresql.jupyter.svc.cluster.local:5432"

gitConfig:
  gitUser: "grader-service"
  gitEmail: "grader-service@mail.com"

volumePermissions:
  enabled: true

extraConfig: |
  # JupyterHub client config
  c.GraderService.oauth_clients = [{
      'client_id': 'my_id',
      'client_secret': 'my_secret',
      'redirect_uri': 'http://localhost/hub/oauth_callback'
  }]
  
  from grader_service.auth.dummy import DummyAuthenticator
  
  c.GraderService.authenticator_class = DummyAuthenticator
  c.Authenticator.allowed_users = {'admin', 'instructor', 'student', 'tutor'}
  
  c.Authenticator.admin_users = {'admin'}
  
  c.GraderService.load_roles = {"lect1:instructor": ["admin", "instructor"], "lect1:student": ["student"], "lect1:tutor": ["tutor"]}

autogradeExecutorClass: KubeAutogradeExecutor
kubeAutogradeExecutor:
  image: ghcr.io/tu-wien-datalab/grader-service-labextension

# pvc
# If storageClassName is not defined or commented as below, the default storageClass from your cluster will be used.

#storageClassName: "csi-cinder-sc-delete"
accessMode: "ReadWriteOnce"
capacity: "5G"

ingress:
  enabled: true

rabbitmq:
  resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 500m
        memory: 1Gi

