name: Build and Deploy Service Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  nightly:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # BUILD
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      working-directory: ./grader_service
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine
        pip install -r ../grader_convert/requirements.txt
        pip install -r requirements.txt
    - name: Build package
      working-directory: ./grader_service
      run: python -m build -n

    # TEST
    - name: Install dependencies
      working-directory: ./grader_service
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install ipykernel
        python -m ipykernel install --user --name=python3
        pip install -r ../grader_convert/requirements.txt
        pip install -r requirements.txt
        pip install -r ../requirements-test.txt
    - name: Run tests
      working-directory: ./grader_service
      run: |
        source venv/bin/activate
        pytest ./grader_service/tests

    # Upload Artifacts
    - name: Archive service artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-service
        retention-days: 1
        path: |
          grader_service/dist
          !grader_service/dist/**/*.md

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=match,pattern=\d.\d.\d.*
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.1

    - name: Install chart-releaser
      run: |
        # Download chart releaser
        curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.4.0/chart-releaser_1.4.0_linux_amd64.tar.gz"
        tar -xzf cr.tar.gz
        rm -f cr.tar.gz

    - name: Run chart-releaser
      env:
        CR_SKIP_EXISTING: true
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        CR_RELEASE_NAME_TEMPLATE: "{{ .Name }}-helm-{{ .Version }}-nightly-{{ .AppVersion }}"
        CR_INDEX_PATH: "index.yaml"
      run: |
        repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY")
        owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY")
        commit_hash=${GITHUB_SHA::8}
        
        echo "Change AppVersion"
        sed -i "s/^appVersion:.*/appVersion: $commit_hash/" charts/grader-service/Chart.yaml
        
        echo "Creating release..."
        # package chart
        ./cr package 'charts/grader-service'

        # upload chart to github releases
        ./cr upload \
            --owner "$owner" \
            --git-repo "$repo" \

        # Update index and push to github pages
        ./cr index \
            --owner "$owner" \
            --git-repo "$repo" \
            --push