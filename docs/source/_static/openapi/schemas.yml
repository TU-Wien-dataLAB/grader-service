## Model generation:
#  
# Typescript:
# java -jar ../openapi-generator-cli.jar generate -i docs/source/_static/openapi/schemas.yml -g typescript-angular -o src --global-property models
#
# Python (service):
# call in service root directory
# java -Dmodels -DsupportingFiles=util.py,base_model.py,typing_utils.py,__init__.py -jar ../openapi-generator-cli.jar generate -i ../grader/docs/source/_static/openapi/schemas.yml -g python-flask -o . --additional-properties=packageName='grader_service.api' ; rm -r grader_service/api/test grader_service/api/controllers grader_service/api/openapi

# 
# Python (labextension):
# call in labextension root directory
# java -Dmodels -DsupportingFiles=util.py,base_model.py,typing_utils.py -jar ../openapi-generator-cli.jar generate -i ../grader/docs/source/_static/openapi/schemas.yml -g python-flask -o . --additional-properties=packageName='grader_labextension.api' ; rm -r grader_labextension/api/test grader_labextension/api/controllers grader_labextension/api/openapi .openapi-generator/


openapi: '3.0.2'
info:
  title: Grader Extension API Schemas
  version: '0.1'

paths:
  /:
    get:
      responses:
        200:
          description: OK

###### Data type definitions
components:
  schemas:
    User:
      type: "object"
      properties:
        name:
          type: "string"
          example: "Baz Bar"
        display_name:
          type: "string"
          example: "Baz Bar"
      example:
        name: "Baz Bar"
        display_name: "Baz Bar"
    Lecture:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "Informationsvisualisierung"
        code:
          type: "string"
          example: "ivs21"
        complete:
          type: "boolean"
          default: false
      example:
        id: 1
        name: "Informationsvisualisierung"
        code: "ivs21"
        complete: false
    AssignmentSettings:
      type: "object"
      properties:
        deadline:
          type: "string"
          format: "date-time"
        max_submissions:
          type: "integer"
        allowed_files:
          type: "array"
          items:
            type: "string"
          default: []
        late_submission:
          type: "array"
          items:
            $ref: '#/components/schemas/SubmissionPeriod'
        autograde_type:
          type: "string"
          enum:
            - "auto"
            - "full_auto"
            - "unassisted"
          default: "auto"
      example:  
        late_submission:
          - period: "P1W1D"
            scaling: 0.5
          - period: "P2W1D"
            scaling: 0.2
    SubmissionPeriod:
      type: "object"
      properties:
        period:
          type: "string"
        scaling:
          type: "number"
          format: "float"
      example:
          period: "P1W1D"
          scaling: 0.5  
    Assignment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "assignment_1"
        status:
          type: string
          enum:
            - created # another state of an assignment (instructor only)
            - pushed
            - released
            - complete # final state -> final grade is calculated
        points:
          type: number
          format: float
        settings:
          $ref: "#/components/schemas/AssignmentSettings"
    Submission:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        submitted_at:
          type: "string"
          format: "date-time"
          example: "2023-07-21T11:53:07Z"
        auto_status:
          $ref: "#/components/schemas/AutoStatus"
        manual_status:
          $ref: "#/components/schemas/ManualStatus"
        username:
          type: string
        user_display_name:
          type: string
        grading_score:
          type: number
          format: float
        score_scaling:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        score:
          type: number
          format: float
        assignid:
          type: "integer"
          format: "int64"
        commit_hash:
          type: string
        feedback_status:
          $ref: "#/components/schemas/FeedbackStatus"
        edited:
          type: boolean
      example:
        id: 2
        submitted_at: "2023-07-21T11:53:07Z"
        auto_status: "automatically_graded"
        manual_status: "manually_graded"
        user_id: 1
        user_display_name: "emmy-noether"
        grading_score: 10.0
        score_scaling: 1
        score: 10.0
        assignid: 2
        commit_hash: "d2c2372811f226f61f106e5c3d42e5892fd25ee8"
        feedback_status: "generated"
        edited: false
    AssignmentDetail:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "assignment_1"
        settings:
          $ref: "#/components/schemas/AssignmentSettings"
        status:
          type: string
          enum:
            - created # another state of an assignment (instructor only)
            - pushed
            - released
            - complete # final state -> final grade is calculated
        points:
          type: number
          format: float
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/Submission'
    ErrorMessage:
      type: "object"
      required: [ "code", "error", "path" ]
      properties:
        code:
          type: integer
        error:
          type: string
        path:
          type: string
        message:
          type: string
        traceback:
          type: string
    UserSubmissions:
      type: "array"
      items:
        type: "object"
        properties:
          user:
            $ref: "#/components/schemas/User"
          submissions:
            type: "array"
            items:
              $ref: "#/components/schemas/Submission"
    RemoteFileStatus:
      type: "object"
      required: ["status"]
      properties:
        status:
          type: string
          enum: ["UP_TO_DATE", "DIVERGENT", "PULL_NEEDED", "PUSH_NEEDED", "NO_REMOTE_REPO"]
    AutoStatus:
      type: string
      enum:
        - "not_graded"
        - "pending"
        - "automatically_graded"
        - "grading_failed"
    ManualStatus:
      type: string
      enum:
        - "not_graded"
        - "manually_graded"
        - "being_edited"
    FeedbackStatus:
      type: string
      enum:
        - "not_generated"
        - "generating"
        - "generated"
        - "generation_failed"
        - "feedback_outdated"
