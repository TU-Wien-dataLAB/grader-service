apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "grader-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "grader-service.labels" . | nindent 4 }}
data:
{{ if eq .Values.autogradeExecutorClass "KubeAutogradeExecutor" }}
  grader_service_config.py: |
    from grader_service.autograding.kube.kube_grader import KubeAutogradeExecutor
    {{ .Values.extraConfig }}
    c.RequestHandlerConfig.autograde_executor_class = KubeAutogradeExecutor
{{- if .Values.requestHandlerConfig }}
{{- if .Values.requestHandlerConfig.git_max_file_mb }}
    c.RequestHandlerConfig.git_max_file_size_mb = {{ .Values.requestHandlerConfig.git_max_file_mb }}
{{- end }}
{{- end }}
    c.KubeAutogradeExecutor.kube_context = None
{{- if .Values.kubeAutogradeExecutor.namespace }}
    c.KubeAutogradeExecutor.namespace = {{ .Values.kubeAutogradeExecutor.namespace | quote }}
{{- end }}
    c.KubeAutogradeExecutor.default_image_name = lambda l, a: "{{ .Values.kubeAutogradeExecutor.image }}:{{ .Values.kubeAutogradeExecutor.tag | default .Chart.AppVersion }}"
    c.KubeAutogradeExecutor.volume = {"name": "data", "persistentVolumeClaim": {"claimName": "{{ include "grader-service.fullname" . }}"}}
    c.KubeAutogradeExecutor.extra_volumes = {{ .Values.kubeAutogradeExecutor.extraVolumes | default "[]" }}
    c.KubeAutogradeExecutor.extra_volume_mounts = {{ .Values.kubeAutogradeExecutor.extraVolumeMounts | default "[]" }}
{{- if .Values.requestHandlerConfig.enable_lti_features }}
    c.RequestHandlerConfig.enable_lti_features = True
    c.RequestHandlerConfig.lti_token_url = {{ .Values.requestHandlerConfig.lti_token_url | quote }}
    c.RequestHandlerConfig.lti_client_id = {{ .Values.requestHandlerConfig.lti_client_id | quote }}
{{- if .Values.requestHandlerConfig.lti_username_convert }}
    c.RequestHandlerConfig.lti_username_convert = {{ .Values.requestHandlerConfig.lti_username_convert }}
{{ else }}
    c.RequestHandlerConfig.lti_username_convert = None
{{ end }}
    c.RequestHandlerConfig.lti_token_private_key = {{ .Values.requestHandlerConfig.lti_token_private_key | quote }}
{{ end }}

    {{ else }}
  grader_service_config.py: |
    from grader_service.autograding.local_grader import LocalAutogradeExecutor
    c.RequestHandlerConfig.autograde_executor_class = LocalAutogradeExecutor
{{ end }}

  .gitconfig: |
    [user]
      name = {{ .Values.gitConfig.gitUser }}
      email = {{ .Values.gitConfig.gitEmail }}